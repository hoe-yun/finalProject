<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.haribo.mapper.EmployeeMapper">

	<select id="loginEmployee" parameterType="com.example.haribo.vo.Employee" resultType="java.util.Map">
		SELECT
			e.employee_no employeeNo,
			e.employee_id employeeId,
			ed.employee_name employeeName,
			b.branch_no branchNo,
			b.branch_name branchName
		FROM branch b
		INNER JOIN employee e ON b.branch_no = e.branch_no
		INNER JOIN employee_detail ed ON e.employee_no = ed.employee_no
		WHERE e.employee_id = #{employeeId}
		AND e.employee_pw = PASSWORD(#{employeePw})
		AND e.employee_active = 'Y'
	</select>

	<insert id="insertEmployee" parameterType="com.example.haribo.vo.Employee">
		<selectKey order="AFTER" resultType="Integer" keyProperty="employeeNo">
			SELECT last_insert_id();
		</selectKey>
		INSERT INTO employee( 
			branch_no,
			employee_id,
			employee_pw
		) VALUES (
			#{branchNo}, 
			#{employeeId},
			PASSWORD(#{employeePw})
		)
	</insert>
	
	<insert id="insertEmployeeDetail" parameterType="com.example.haribo.vo.EmployeeDetail">
		INSERT INTO employee_detail(
			employee_no,
			employee_name,
			employee_gender,
			employee_phone,
			employee_email
		) VALUES (
			#{employeeNo},
			#{employeeName},
			#{employeeGender},
			#{employeePhone},
			#{employeeEmail}
		)
	</insert>
	
	<select id="insertEmployeeBranch" resultType="com.example.haribo.vo.Branch">
		SELECT
			branch_no branchNo,
			branch_name branchName
		FROM branch	
	
	</select>
	
	<select id="idCkEmp" parameterType="String" resultType="Integer">
		SELECT
			COUNT(employee_id)
		FROM employee
		WHERE employee_id = #{idCk}
	</select>
	
	<select id="pwCkEmp" parameterType="com.example.haribo.vo.Employee" resultType="Integer">
		SELECT
			COUNT(employee_id)
		FROM employee
		WHERE employee_id = #{employeeId}
		AND employee_pw = PASSWORD(#{employeePw})
	</select>
	
	<select id="employeeList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT
	        e.branch_no branchNo,
	        e.employee_no employeeNo,
	        e.employee_id employeeId,
	        ed.employee_name employeeName,
	        ed.employee_phone employeePhone,
	        ed.employee_gender employeeGender,
	        ed.employee_email employeeEmail,
	        ed.createdate,
	        e.employee_active employeeActive
	    FROM employee e
	    LEFT OUTER JOIN employee_detail ed ON e.employee_no = ed.employee_no
	    ORDER BY e.branch_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>

	<select id="getTotalRow" resultType="int">
		SELECT COUNT(*)
		FROM employee e LEFT OUTER JOIN employee_detail ed
		ON e.employee_no = ed.employee_no
	</select>
	
	<select id="selectEmployeeInfo" parameterType="com.example.haribo.vo.Employee" resultType="java.util.Map">
		SELECT 
			ed.employee_name employeeName,
			e.employee_id employeeId,
			e.createdate createdate,
			ed.employee_email employeeEmail,
	        ed.employee_phone employeePhone,
	        eimg.employee_img_file_name employeeImgFileName
		FROM employee e
		INNER JOIN employee_detail ed
		ON e.employee_no = ed.employee_no
		INNER JOIN employee_img eimg
		ON ed.employee_no = eimg.employee_no
		WHERE e.employee_no = #{employeeNo}
	</select>
	
	<select id="employeeImgCnt" parameterType="com.example.haribo.vo.EmployeeImg">
		SELECT COUNT(*)
		FROM employee_img
		WHERE employee_no = #{employeeNo}
	</select>
	
	<update id="updateEmployeeActive" parameterType="com.example.haribo.vo.Employee">
		UPDATE employee
		SET employee_active = #{employeeActive}
		WHERE employee_no = #{employeeNo}
	</update>
	
	<update id="updateEmployeePw" parameterType="java.util.Map">
		UPDATE employee SET
			employee_pw = PASSWORD(#{newEmployeePw}),
			updatedate = now()
		WHERE employee_id = #{employeeId}
		AND employee_pw = PASSWORD(#{employeePw})
	</update>
	
	<delete id="deleteEmployeeDetail" parameterType="com.example.haribo.vo.EmployeeDetail">
		DELETE FROM employee_detail
		WHERE employee_no = #{employeeNo}
	</delete>

	<insert id="insertEmployeeImg" parameterType="com.example.haribo.vo.EmployeeImg">
		INSERT INTO employee_img (
			employee_no,
			employee_img_origin_name,
			employee_img_file_name,
			employee_img_size,
			employee_img_type
		)VALUES(
			#{employeeNo},
			#{employeeImgOriginName},
			#{employeeImgFileName},
			#{employeeImgSize},
			#{employeeImgType}
		)
	</insert>
	
	<delete id="deleteEmployeeImg" parameterType="com.example.haribo.vo.EmployeeImg">
		DELETE FROM employee_img
		WHERE employee_no = #{employeeNo}
	</delete>
	
	<select id="selectEmployeeImgName" parameterType="com.example.haribo.vo.EmployeeImg" resultType="String">
		SELECT
			employee_img_file_name employeeImgFileName
		FROM employee_img
		WHERE employee_no = #{employeeNo}
	</select>
	
	<!-- 여기서부터 트레이너 관련 mapper xml -->
	<!--
	<select id="trainerList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			e.employee_id employeeId,
			e.createdate createdate,
			ei.employee_img_file_name employeeImgFileName,
			ed.employee_name employeeName
		FROM employee e
		INNER JOIN employee_img ei
		ON e.employee_no = ei.employee_no
		INNER JOIN employee_detail ed
		ON ei.employee_no = ed.employee_no
		WHERE e.employee_no = #{employeeNo}
	</select>
	-->
</mapper>